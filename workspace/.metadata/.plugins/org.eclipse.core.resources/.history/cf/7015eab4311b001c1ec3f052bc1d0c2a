package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.repository.SobaRepository;

import model.Korisnik;
import model.Soba;

@RestController

@RequestMapping("/api/")
public class Kontroler {

	@Autowired
	SobaRepository sr;
	@Autowired
	KorisnikRepository kr;
	
	@GetMapping(value = "getSveSobe")
	public ResponseEntity<List<Soba>> getSveSobe() {
		return new ResponseEntity<List<Soba>>(sr.findAll(), HttpStatus.OK);
	}
	
	@PostMapping(value = "addSoba")
	public ResponseEntity<Soba> addSoba(@RequestParam(name = "brojKreveta") String brojKreveta, 
										@RequestParam(name = "tipSobe") String tipSobe, 
										@RequestParam(name = "kvadratura") String kvadratura,
										@RequestParam(name = "cena") String cena,
										@RequestParam(name = "imgUrl") String imgUrl) {
		Soba s = new Soba();
		int brKreveta = Integer.parseInt(brojKreveta);
		int kvadraturaInt = Integer.parseInt(kvadratura);
		int cenaInt = Integer.parseInt(cena);
		s.setBrojKreveta(brKreveta);
		s.setTipSobe(tipSobe);
		s.setKvadratura(kvadraturaInt);
		s.setCena(cenaInt);
		s.setImgUrl(imgUrl);
		sr.save(s);
		
		return new ResponseEntity<Soba>(s, HttpStatus.OK);
	}
	
	@PostMapping("deleteSoba")
	public ResponseEntity<Boolean> deleteSoba(@RequestParam(name = "idSoba") String idSoba) {
		int sobaInt = Integer.parseInt(idSoba);
		Soba s = sr.findById(sobaInt).get();
		sr.delete(s);
		return new ResponseEntity<Boolean>(true, HttpStatus.OK);
	}
	
	@PostMapping(value = "login")
	public ResponseEntity<Korisnik> login(@RequestParam(name = "username") String username,
			@RequestParam(name = "password") String password) {
		System.out.println(username);
		Korisnik k = new Korisnik();

		if (kr.findByUsername(username) != null) {
			if (kr.findByUsername(username).getPassword().equals(password)) {
				r.setUsername(username);
				r.setIdUloga(kr.findByUsername(username).getUloga().getIdUloga());
				r.setIme(kr.findByUsername(username).getIme());
				r.setPrezime(kr.findByUsername(username).getPrezime());
			}
		}
		return new ResponseEntity<Response>(r, HttpStatus.OK);

	}
}
